{
  "getEnergyItem()": {
    "returns": { "type": "Table (ItemStack)" },
    "description": "Get the contents of the energy item slot.",
    "name": "getEnergyItem"
  },
  "getLavaNeeded()": {
    "returns": { "type": "Number (int)" },
    "description": "Get the amount needed to fill the lava tank.",
    "name": "getLavaNeeded"
  },
  "getMaxEnergy()": {
    "name": "getMaxEnergy",
    "returns": { "type": "Number (FloatingLong)" }
  },
  "getDirection()": {
    "name": "getDirection",
    "returns": {
      "values": ["DOWN", "UP", "NORTH", "SOUTH", "WEST", "EAST"],
      "type": "String (Direction)"
    }
  },
  "getComparatorLevel()": {
    "name": "getComparatorLevel",
    "returns": { "type": "Number (int)" }
  },
  "getEnergy()": {
    "name": "getEnergy",
    "returns": { "type": "Number (FloatingLong)" }
  },
  "getOwnerUUID()": {
    "name": "getOwnerUUID",
    "returns": { "type": "String (UUID)" }
  },
  "getInstalledUpgrades()": {
    "name": "getInstalledUpgrades",
    "returns": {
      "values": [
        "SPEED",
        "ENERGY",
        "FILTER",
        "GAS",
        "MUFFLING",
        "ANCHOR",
        "STONE_GENERATOR"
      ],
      "type": "Table (String (Upgrade) => Number (int))"
    }
  },
  "getOwnerName()": { "name": "getOwnerName", "returns": { "type": "String" } },
  "getTemperature()": {
    "returns": { "type": "Number (double)" },
    "description": "Get the temperature of the generator in Kelvin.",
    "name": "getTemperature"
  },
  "setRedstoneMode(type)": {
    "returns": { "type": "Nothing" },
    "name": "setRedstoneMode",
    "params": [
      {
        "type": "String (RedstoneControl)",
        "name": "type",
        "values": ["DISABLED", "HIGH", "LOW", "PULSE"]
      }
    ]
  },
  "help()": {
    "name": "help",
    "returns": { "type": "Table (String => MethodHelpData)" }
  },
  "getProductionRate()": {
    "returns": { "type": "Number (FloatingLong)" },
    "description": "Get the amount of energy produced by this generator in the last tick.",
    "name": "getProductionRate"
  },
  "help(methodName)": {
    "returns": { "type": "Table (String => MethodHelpData)" },
    "name": "help",
    "params": [{ "name": "methodName", "type": "String" }]
  },
  "getEnergyFilledPercentage()": {
    "name": "getEnergyFilledPercentage",
    "returns": { "type": "Number (double)" }
  },
  "getEnergyNeeded()": {
    "name": "getEnergyNeeded",
    "returns": { "type": "Number (FloatingLong)" }
  },
  "getLavaFilledPercentage()": {
    "returns": { "type": "Number (double)" },
    "description": "Get the filled percentage of the lava tank.",
    "name": "getLavaFilledPercentage"
  },
  "getFuelItem()": {
    "returns": { "type": "Table (ItemStack)" },
    "description": "Get the contents of the fuel item slot.",
    "name": "getFuelItem"
  },
  "getSupportedUpgrades()": {
    "name": "getSupportedUpgrades",
    "returns": {
      "values": [
        "SPEED",
        "ENERGY",
        "FILTER",
        "GAS",
        "MUFFLING",
        "ANCHOR",
        "STONE_GENERATOR"
      ],
      "type": "List (String (Upgrade))"
    }
  },
  "getLava()": {
    "returns": { "type": "Table (FluidStack)" },
    "description": "Get the contents of the lava tank.",
    "name": "getLava"
  },
  "getRedstoneMode()": {
    "name": "getRedstoneMode",
    "returns": {
      "values": ["DISABLED", "HIGH", "LOW", "PULSE"],
      "type": "String (RedstoneControl)"
    }
  },
  "getLavaCapacity()": {
    "returns": { "type": "Number (int)" },
    "description": "Get the capacity of the lava tank.",
    "name": "getLavaCapacity"
  },
  "getTransferLoss()": {
    "name": "getTransferLoss",
    "returns": { "type": "Number (double)" }
  },
  "getMaxOutput()": {
    "name": "getMaxOutput",
    "returns": { "type": "Number (FloatingLong)" }
  },
  "getEnvironmentalLoss()": {
    "name": "getEnvironmentalLoss",
    "returns": { "type": "Number (double)" }
  },
  "getSecurityMode()": {
    "name": "getSecurityMode",
    "returns": {
      "values": ["PUBLIC", "PRIVATE", "TRUSTED"],
      "type": "String (SecurityMode)"
    }
  }
}
